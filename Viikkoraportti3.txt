Kolmannella viikolla sain algoritmin sekä yleisimmät operaattorit toimimaan käytännössä; jäljellä on suorituskyky- ja implementointiraportointia, koodin siistimistä sekä operaattorien yhdistelmien toiminnan implementointi.

Koodin siistimisessä ongelmaksi tulee ennen kaikkea se, että tilakoneen konstruoiva algoritmi toimii varsin eri tavalla sen mukaan, mikä merkki ja seuraava merkki lausekkeessa on vastassa; käytännössä operaattorivaihtoehdot tulee käydä läpi yksi kerrallaan ja konstruoida seuraavat tilat sekä lausekkeen tuleva prosessointi kulloisenkin operaattorin mukaan. Tällöin erillistä metodia, johon sijoittaa yksittäisen regexin merkin tarkistus, ei ole helppoa toteuttaa; operaattorista riippuen seuraava merkki saatetaan jättää välistä tai koko silmukka katkaista kokonaan, ja myös seuraavat tilat konstruoidaan eri tavoilla eri operaattoreille. Näin ollen koko konstruointi on pakko ohjelmoida saman silmukan sisään; joitakin apufunktioita epäilemättä olisi mahdollista toteuttaa, mutta nämä eivät juurikaan lyhentäisi silmukkaan tarvittavaa koodia.

Suorituskykyraportointi on vielä kesken; Applen XCtest-framework tekee rudimentaarisen suorituskykytestauksen, mutta vertailua esimerkiksi muihin regex-toteutuksiin en ole vielä tehnyt.

Operaattorien yhdistäminen on koodissa haastavaa, sillä tämänhetkisessä toteutuksessa ?- ja *-operaattorit toimivat vain yksittäisille kirjaimille eivätkä kokonaisille sulkulausekkeille. Operaattorien toiminnan yleistäminen vaatinee jonkinasteisia rakenteellisia muutoksia tilakoneenkonstruointisilmukkaan, joten silmukan toteutuksen lopullinen muoto ei ole vielä varma.